<root>
	<styles>
		<include src="s2r://panorama/styles/dotastyles.vcss_c" />
		<include src="file://{resources}/styles/custom_game/multiteam_hero_select_overlay.css" />
	</styles>
	<scripts>
		<include src="file://{resources}/scripts/custom_game/util.js" />
	</scripts>
	<script>
		var root = $.GetContextPanel().GetParent().GetParent();
		var gridCore = root.FindChildTraverse('GridCore');
		var mainFilters = root.FindChildTraverse('MainFilters');
		var heroes;

		function Activate() {
			if (heroes == null) {
				$.DispatchEvent('ExternalBrowserGoToURL', 'https://www.patreon.com/dota2unofficial');
			} else if (heroes.length > 0) {
				GameEvents.SendCustomGameEventToServer("smart_random_hero", {});
			}
		}

		function OnMouseOver() {
			var message = heroes == null ? 'cooldown' : heroes.length === 0 ? 'no_stats' : 'ready';
			$.DispatchEvent('DOTAShowTextTooltip', 'smart_random_tooltip_' + message);
			if (message === 'ready') {
				gridCore.Children().forEach(function (child) {
					if (child.paneltype !== 'DOTAHeroCard') return;
					var heroName = 'npc_dota_hero_' + child.FindChildTraverse('HeroImage').heroname;
					child.SetHasClass('Filtered', heroes.indexOf(heroName) === -1);
				});
			}
		}

		function OnMouseOut() {
			$.DispatchEvent('DOTAHideTextTooltip');
			$.DispatchEvent('DOTAUpdateEnabledHeroes', mainFilters);
		}

		SubscribeToNetTableKey('game_state', 'smart_random', function(value) {
			heroes = value[Game.GetLocalPlayerID()];
			if (heroes != null) heroes = Object.keys(heroes).map(function(x) { return heroes[x] });
			$.GetContextPanel().SetHasClass('CantActivate', heroes == null || heroes.length === 0);
		});
	</script>

	<Button
		class="SmartRandomButton"
		onactivate="Activate()"
		onmouseover="OnMouseOver()"
		onmouseout="OnMouseOut()"
	>
		<Label text="#smart_random_button" />
	</Button>
</root>
